{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.module.ts","webpack:///./src/app/personagens/personagens-card/personagens-card.component.css","webpack:///./src/app/personagens/personagens-card/personagens-card.component.html","webpack:///./src/app/personagens/personagens-card/personagens-card.component.ts","webpack:///./src/app/personagens/personagens-list/personagens-list.component.css","webpack:///./src/app/personagens/personagens-list/personagens-list.component.html","webpack:///./src/app/personagens/personagens-list/personagens-list.component.ts","webpack:///./src/app/personagens/personagens.module.ts","webpack:///./src/app/personagens/personsagens-service/personagens.service.ts","webpack:///./src/app/planetas/planetas-card/planetas-card.component.css","webpack:///./src/app/planetas/planetas-card/planetas-card.component.html","webpack:///./src/app/planetas/planetas-card/planetas-card.component.ts","webpack:///./src/app/planetas/planetas-list/planetas-list.component.css","webpack:///./src/app/planetas/planetas-list/planetas-list.component.html","webpack:///./src/app/planetas/planetas-list/planetas-list.component.ts","webpack:///./src/app/planetas/planetas-service/planetas.service.ts","webpack:///./src/app/planetas/planetas.module.ts","webpack:///./src/app/residentes/residentes.component.css","webpack:///./src/app/residentes/residentes.component.html","webpack:///./src/app/residentes/residentes.component.ts","webpack:///./src/app/sobre/sobre.component.css","webpack:///./src/app/sobre/sobre.component.html","webpack:///./src/app/sobre/sobre.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".content_router {\\n  width: 80%;\\n    display: block;\\n    margin: auto;\\n}\\n\\n.mat-drawer-container {\\n  background: #fff;\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\" autosize>\\n  <mat-sidenav\\n  #drawer\\n  class=\\\"sidenav\\\"\\n  fixedInViewport=\\\"true\\\"\\n  [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n  [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n  [opened]=\\\"false\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/personagens\\\">Personagens</a>\\n      <a mat-list-item routerLink=\\\"/planetas\\\">Planetas</a>\\n      <a mat-list-item routerLink=\\\"/sobre\\\">Sobre</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Dragon Ball</span>\\n    </mat-toolbar>\\n    <div class=\\\"content_router\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n\n  constructor(private breakpointObserver: BreakpointObserver) {\n\n  }\n\n\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormField,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatLabel,\n  MatListModule,\n  MatMenuModule,\n  MatPaginatorModule,\n  MatSidenavModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule,\n} from '@angular/material';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport { PersonagensCardComponent } from './personagens/personagens-card/personagens-card.component';\nimport { PersonagensListComponent } from './personagens/personagens-list/personagens-list.component';\nimport { PersonagensModule } from './personagens/personagens.module';\nimport { PlanetasCardComponent } from './planetas/planetas-card/planetas-card.component';\nimport { PlanetasListComponent } from './planetas/planetas-list/planetas-list.component';\nimport { PlanetasModule } from './planetas/planetas.module';\nimport { SobreComponent } from './sobre/sobre.component';\nimport { ResidentesComponent } from './residentes/residentes.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PersonagensCardComponent,\n    PersonagensListComponent,\n    PlanetasListComponent,\n    PlanetasCardComponent,\n    SobreComponent,\n    ResidentesComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule,\n    MatListModule, MatGridListModule, MatCardModule, MatMenuModule,\n    MatTableModule, MatPaginatorModule, MatSortModule,\n    PersonagensModule,\n    PlanetasModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PlanetasListComponent } from './planetas/planetas-list/planetas-list.component';\nimport { PersonagensListComponent } from './personagens/personagens-list/personagens-list.component';\nimport { SobreComponent } from './sobre/sobre.component';\n\n\nconst routes: Routes = [\n  {path: '' , component: PersonagensListComponent},\n  {path: 'personagens' , component: PersonagensListComponent},\n  {path: 'planetas' , component: PlanetasListComponent},\n  {path: 'sobre' , component: SobreComponent},\n  {path: 'residentes/:planeta' , component: PersonagensListComponent},\n]\n@NgModule({\n  imports: [ RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".item {\\n  background-color: #fff;\\n  max-width: 100%;\\n  text-align: center;\\n  font-size: 18px;\\n  padding: 20px 15px;\\n}\\n\\n.image {\\n  display: block;\\n  margin-left: 0;\\n  margin-right: 0;\\n  height: 150px;\\n  -o-object-fit: contain;\\n  object-fit: contain;\\n  width: 100%;\\n}\\n\\nmat-card-header {\\n  justify-content: center;\\n}\\n\\n.mat-card-image {\\n  margin: 0;\\n}\\n\"","module.exports = \"<mat-card class=\\\"item\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"titulo\\\">{{ titulo }}</mat-card-title>\\n    <mat-card-subtitle>{{ subtitulo }}</mat-card-subtitle>\\n  </mat-card-header>\\n\\n    <img class=\\\"image\\\" mat-card-image [src]=\\\"srcImagem\\\" [alt]=\\\"altImagem\\\">\\n    <mat-card-content>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-personagens-card',\n  templateUrl: './personagens-card.component.html',\n  styleUrls: ['./personagens-card.component.css']\n})\nexport class PersonagensCardComponent implements OnInit {\n\n  @Input() srcImagem: String;\n  @Input() altImagem: String;\n  @Input() titulo: String;\n  @Input() subtitulo: String;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n.mat-grid-tile {\\n  overflow: visible;\\n\\n}\\n\\n.mat-grid-list {\\n  display: flex;\\n  width: 900px;\\n  position: relative;\\n  margin: auto;\\n}\\n\\n@media(max-width: 480px) {\\n  .mat-grid-list {\\n    width: 90%;\\n  }\\n}\\n\\n@media(min-width: 480px) {\\n  mat-grid-list {\\n    position: unset;\\n  }\\n  .mat-grid-list {\\n    width: 50%;\\n  }\\n}\\n\\n@media(min-width: 600px) {\\n  mat-grid-list {\\n    position: unset;\\n  }\\n  .mat-grid-list {\\n    width: 100%;\\n  }\\n}\\n\\napp-personagens-card {\\n  width: 100%;\\n}\\n\\n.form_input {\\n  margin-top: 20px;\\n}\\n\"","module.exports = \"<mat-form-field class=\\\"form_input\\\" >\\n  <mat-label>Buscar personagens</mat-label>\\n  <input matInput placeholder=\\\"Nome do personagem\\\" value=\\\"\\\" (input)=\\\"nomeBusca = $event.target.value\\\">\\n</mat-form-field>\\n\\n<mat-grid-list #grid [cols]=\\\"cols\\\" rowHeight=\\\"300px\\\" gutterSize=\\\"10px\\\">\\n  <mat-grid-tile *ngFor=\\\"let personagem of filtrarPersonagens()\\\">\\n\\n   <app-personagens-card\\n      [srcImagem]=\\\"formatarUrlImagem(personagem.image)\\\"\\n      [altImagem]=\\\"personagem.name\\\"\\n      [titulo]=\\\"personagem.name\\\"\\n      [subtitulo]=\\\"personagem.name\\\"></app-personagens-card>\\n\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\"","import { PlanetasService } from './../../planetas/planetas-service/planetas.service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Personagem } from './../personagens-model/personagem';\nimport { PersonagensService } from './../personsagens-service/personagens.service';\n\n\n@Component({\n  selector: 'app-personagens-list',\n  templateUrl: './personagens-list.component.html',\n  styleUrls: ['./personagens-list.component.css']\n})\nexport class PersonagensListComponent implements OnInit {\n\n  title = 'app';\n  nomeBusca = '';\n  personagens: Personagem[] = [];\n\n\n  cols: number;\n\n  gridByBreakpoint = {\n    xl: 3,\n    lg: 3,\n    md: 3,\n    sm: 2,\n    xs: 1\n  };\n\n\n  ngOnInit() {\n\n    }\n\n  constructor(private personagensService: PersonagensService,\n              private planetasService: PlanetasService,\n              private breakpointObserver: BreakpointObserver,\n              private activatedRoute: ActivatedRoute){\n\n    // Verifica parâmetros de busca de residentes/planetas\n    const planeta = this.activatedRoute.snapshot.params.planeta;\n    if (planeta) {\n      this.planetasService.findByName(planeta)\n      .subscribe((planeta) => {\n        if (planeta) {\n          planeta.residents.forEach((residente) => {\n            this.personagensService.findByName(residente).subscribe((personagem) => this.personagens.push(personagem));\n          });\n        }\n      });\n    } else {\n    this.personagensService.list()\n      .subscribe(personagens => this.personagens = personagens);\n    }\n\n    /*this.personagens = [\n      { id: '0', image: 'https://dragon-ball-api.herokuapp.com/../images/Goku.jpg', name: 'Goku' },\n      { id: '1', image: 'https://dragon-ball-api.herokuapp.com/../images/Goku.jpg', name: 'Goku' },\n      { id: '2', image: 'https://dragon-ball-api.herokuapp.com/../images/Goku.jpg', name: 'Goku' },\n      { id: '3', image: 'https://dragon-ball-api.herokuapp.com/../images/Goku.jpg', name: 'Goku' },\n    ];*/\n\n    this.breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n      Breakpoints.XLarge,\n    ]).subscribe(result => {\n      if (result.matches) {\n        if (result.breakpoints[Breakpoints.XSmall]) {\n          this.cols = this.gridByBreakpoint.xs;\n        }\n        if (result.breakpoints[Breakpoints.Small]) {\n          this.cols = this.gridByBreakpoint.sm;\n        }\n        if (result.breakpoints[Breakpoints.Medium]) {\n          this.cols = this.gridByBreakpoint.md;\n        }\n        if (result.breakpoints[Breakpoints.Large]) {\n          this.cols = this.gridByBreakpoint.md;\n        }\n        if (result.breakpoints[Breakpoints.XLarge]) {\n          this.cols = this.gridByBreakpoint.md;\n        }\n      }\n    });\n  }\n\n\n  filtrarPersonagens() {\n    if (this.nomeBusca) {\n      const exp = new RegExp(this.nomeBusca.trim(), 'i');\n      return this.personagens.filter(personagem => exp.test(personagem.name));\n    }\n    return this.personagens;\n  }\n\n  formatarUrlImagem(url) {\n    if (url.includes('http')) {\n      return url;\n    } else if (url.includes('..')) {\n      return 'https://dragon-ball-api.herokuapp.com/' + url;\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PersonagensCardComponent } from './personagens-card/personagens-card.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [],\n  declarations: []\n})\nexport class PersonagensModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Personagem } from '../personagens-model/personagem';\n\nconst API = 'https://cors-anywhere.herokuapp.com/https://dragon-ball-api.herokuapp.com/api/character';\n\n@Injectable({ providedIn: 'root' })\nexport class PersonagensService {\n\n  constructor(private http: HttpClient) {\n    this.http = http;\n  }\n\n  list() {\n    return this.http\n    .get<Personagem[]>(API);\n  }\n\n  findByName(name: String) {\n    return this.http\n    .get<Personagem>(API + '/' + name);\n  }\n}\n","module.exports = \".item {\\n  background-color: #fff;\\n  max-width: 100%;\\n  text-align: center;\\n  font-size: 18px;\\n  padding: 20px 15px;\\n}\\n\\n.image {\\n  display: block;\\n  margin-left: 0;\\n  margin-right: 0;\\n  height: 150px;\\n  -o-object-fit: contain;\\n  object-fit: contain;\\n  width: 100%;\\n}\\n\\nmat-card-header {\\n  justify-content: center;\\n}\\n\\n.mat-card-image {\\n  margin: 0;\\n}\\n\"","module.exports = \"<mat-card class=\\\"item\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"titulo\\\">Planeta {{ titulo }}</mat-card-title>\\n  </mat-card-header>\\n  <img class=\\\"image\\\" mat-card-image [src]=\\\"srcImagem\\\" [alt]=\\\"altImagem\\\">\\n  <mat-card-content>\\n    <mat-card-subtitle>População: {{ populacao }} habitantes.</mat-card-subtitle>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button [routerLink]=\\\"routeTo\\\">Ver residentes </button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-planetas-card',\n  templateUrl: './planetas-card.component.html',\n  styleUrls: ['./planetas-card.component.css']\n})\nexport class PlanetasCardComponent implements OnInit {\n\n  @Input() srcImagem: String;\n  @Input() altImagem: String;\n  @Input() titulo: String;\n  @Input() populacao: String;\n  @Input() routeTo: String;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  exibirResidentes(planeta) {\n    console.log(planeta);\n  }\n}\n","module.exports = \"\\n.mat-grid-tile {\\n  overflow: visible;\\n\\n}\\n\\n.mat-grid-list {\\n  display: flex;\\n  width: 900px;\\n  position: relative;\\n  margin: auto;\\n}\\n\\n@media(max-width: 480px) {\\n  .mat-grid-list {\\n    width: 90%;\\n  }\\n}\\n\\n@media(min-width: 480px) {\\n  mat-grid-list {\\n    position: unset;\\n  }\\n  .mat-grid-list {\\n    width: 50%;\\n  }\\n}\\n\\n@media(min-width: 600px) {\\n  mat-grid-list {\\n    position: unset;\\n  }\\n  .mat-grid-list {\\n    width: 100%;\\n  }\\n}\\n\\napp-planetas-card {\\n  width: 100%;\\n}\\n\\n.form_input {\\n  margin-top: 20px;\\n}\\n\"","module.exports = \"<mat-form-field class=\\\"form_input\\\">\\n  <mat-label>Buscar Planetas</mat-label>\\n  <input matInput placeholder=\\\"Nome do planeta\\\" value=\\\"\\\" (input)=\\\"planetaBusca = $event.target.value\\\">\\n</mat-form-field>\\n\\n<mat-grid-list #grid [cols]=\\\"cols\\\" rowHeight=\\\"300px\\\" gutterSize=\\\"10px\\\">\\n  <mat-grid-tile *ngFor=\\\"let planeta of filtrarPlanetas()\\\">\\n\\n   <app-planetas-card\\n      [srcImagem]=\\\"formatarUrlImagem(planeta.image)\\\"\\n      [altImagem]=\\\"planeta.name\\\"\\n      [titulo]=\\\"planeta.name\\\"\\n      [routeTo]=\\\"'/residentes/'+planeta.name\\\"\\n      [populacao]=\\\"planeta.residents.length\\\"></app-planetas-card>\\n\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n\"","import { PlanetasService } from './../planetas-service/planetas.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Planeta } from '../planetas-model/planeta';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-planetas-list',\n  templateUrl: './planetas-list.component.html',\n  styleUrls: ['./planetas-list.component.css']\n})\nexport class PlanetasListComponent implements OnInit {\n\n  planetaBusca = '';\n  planetas: Planeta[] = [];\n\n  cols: number;\n  gridByBreakpoint = {\n    xl: 3,\n    lg: 3,\n    md: 3,\n    sm: 2,\n    xs: 1\n  };\n\n  constructor(planetasService: PlanetasService, private breakpointObserver: BreakpointObserver) {\n\n    planetasService.list()\n      .subscribe(planetas => this.planetas = planetas);\n\n      /*this.planetas = [\n        {id: '0', image: '/', name: 'Goku', residents: ['1', '2' , '3']},\n        {id: '1', image: '/', name: 'Majin', residents: ['1', '2' , '3']},\n        {id: '2', image: '/', name: 'Pico', residents: ['1', '2' , '3']},\n        {id: '3', image: '/', name: 'Gohan', residents: ['1', '2' , '3']},\n      ];*/\n\n\n      this.breakpointObserver.observe([\n        Breakpoints.XSmall,\n        Breakpoints.Small,\n        Breakpoints.Medium,\n        Breakpoints.Large,\n        Breakpoints.XLarge,\n      ]).subscribe(result => {\n        if (result.matches) {\n          if (result.breakpoints[Breakpoints.XSmall]) {\n            this.cols = this.gridByBreakpoint.xs;\n          }\n          if (result.breakpoints[Breakpoints.Small]) {\n            this.cols = this.gridByBreakpoint.sm;\n          }\n          if (result.breakpoints[Breakpoints.Medium]) {\n            this.cols = this.gridByBreakpoint.md;\n          }\n          if (result.breakpoints[Breakpoints.Large]) {\n            this.cols = this.gridByBreakpoint.md;\n          }\n          if (result.breakpoints[Breakpoints.XLarge]) {\n            this.cols = this.gridByBreakpoint.md;\n          }\n        }\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  filtrarPlanetas() {\n    if ( this.planetaBusca ) {\n      const exp = new RegExp(this.planetaBusca.trim(), 'i');\n      return this.planetas.filter(planeta => exp.test(planeta.name));\n    }\n    return this.planetas;\n  }\n\n  formatarUrlImagem(url) {\n    if (url.includes('http')) {\n      return url;\n    } else if (url.includes('..')) {\n      return 'https://dragon-ball-api.herokuapp.com/' + url;\n         }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Planeta } from '../planetas-model/planeta';\n\nconst API = 'https://cors-anywhere.herokuapp.com/https://dragon-ball-api.herokuapp.com/api/planet';\n\n@Injectable({ providedIn: 'root'})\nexport class PlanetasService {\n\n  constructor(private http: HttpClient) {\n    this.http = http;\n  }\n\n  list() {\n    return this.http\n    .get<Planeta[]>(API);\n  }\n\n  findByName(name: string) {\n    return this.http\n    .get<Planeta>(API + '/' + name);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\nexport class PlanetasModule { }\n","module.exports = \".item {\\n  background-color: #fff;\\n  max-width: 100%;\\n  text-align: center;\\n  font-size: 18px;\\n  padding: 20px 15px;\\n}\\n\\n.image {\\n  display: block;\\n  margin-left: 0;\\n  margin-right: 0;\\n  height: 150px;\\n  -o-object-fit: contain;\\n  object-fit: contain;\\n  width: 100%;\\n}\\n\\nmat-card-header {\\n  justify-content: center;\\n}\\n\\n.mat-card-image {\\n  margin: 0;\\n}\\n\\n.mat-card {\\n  width: 40%;\\n  margin: 40px auto;\\n}\\n\"","module.exports = \"<mat-card class=\\\"item\\\">\\n  <mat-card-header>\\n    <mat-card-title class=\\\"titulo\\\">Planeta {{ planeta.name }}</mat-card-title>\\n  </mat-card-header>\\n  <img class=\\\"image\\\" mat-card-image [src]=\\\"planeta.image\\\" [alt]=\\\"planeta.name\\\">\\n  <mat-card-content>\\n    <mat-card-subtitle>Residentes: {{ planeta.residents.join(', ') }}.</mat-card-subtitle>\\n  </mat-card-content>\\n\\n</mat-card>\\n\"","import { PlanetasService } from './../planetas/planetas-service/planetas.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { Planeta } from '../planetas/planetas-model/planeta';\n\n@Component({\n  selector: 'app-residentes',\n  templateUrl: './residentes.component.html',\n  styleUrls: ['./residentes.component.css']\n})\nexport class ResidentesComponent implements OnInit {\n\n  planeta: Planeta;\n\n  constructor(private planetasService: PlanetasService, private activatedRoute: ActivatedRoute) {\n\n\n\n    const planeta = this.activatedRoute.snapshot.params.planeta;\n    this.planetasService.findByName(planeta)\n      .subscribe(planeta => this.planeta = planeta);\n\n      this.planeta = {id: '0', image: '/', name: 'Goku', residents: ['1', '2' , '3']};\n\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  Testes\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sobre',\n  templateUrl: './sobre.component.html',\n  styleUrls: ['./sobre.component.css']\n})\nexport class SobreComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}